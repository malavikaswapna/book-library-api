{
  "openapi": "3.0.0",
  "info": {
    "title": "Book Library API",
    "description": "An API to manage books and reviews in a library with JWT authentication, scope-based authorization, and role-based access control.",
    "version": "1.0.0"
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token with role and scope-based authorization. Tokens include specific permission scopes based on the user's role."
      }
    },
    "schemas": {
      "Book": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "title": { "type": "string" },
          "author": { "type": "string" },
          "published_year": { "type": "integer" },
          "book_picture": { "type": "string" },
          "book_description": { "type": "string" },
          "genre": { "type": "string" },
          "average_rating": { "type": "number", "format": "float" },
          "_links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": { "type": "string" }
                }
              },
              "reviews": {
                "type": "object",
                "properties": {
                  "href": { "type": "string" }
                }
              },
              "collection": {
                "type": "object",
                "properties": {
                  "href": { "type": "string" }
                }
              }
            }
          }
        }
      },
      "BookList": {
        "type": "object",
        "properties": {
          "books": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Book"
            }
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": { "type": "string" }
                }
              },
              "first": {
                "type": "object",
                "properties": {
                  "href": { "type": "string" }
                }
              },
              "last": {
                "type": "object",
                "properties": {
                  "href": { "type": "string" }
                }
              },
              "next": {
                "type": "object",
                "properties": {
                  "href": { "type": "string" }
                }
              },
              "prev": {
                "type": "object",
                "properties": {
                  "href": { "type": "string" }
                }
              }
            }
          },
          "page": { "type": "integer" },
          "limit": { "type": "integer" },
          "total_items": { "type": "integer" },
          "total_pages": { "type": "integer" },
          "filters": {
            "type": "object",
            "properties": {
              "author": { "type": "string" },
              "genre": { "type": "string" },
              "year": { "type": "string" },
              "title": { "type": "string" }
            }
          }
        }
      },
      "Review": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "book_id": { "type": "integer" },
          "review_text": { "type": "string" },
          "rating": { "type": "integer" },
          "created_at": { "type": "string", "format": "date-time" },
          "_links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": { "type": "string" }
                }
              },
              "book": {
                "type": "object",
                "properties": {
                  "href": { "type": "string" }
                }
              }
            }
          }
        }
      },
      "ReviewList": {
        "type": "object",
        "properties": {
          "reviews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Review"
            }
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": { "type": "string" }
                }
              },
              "book": {
                "type": "object",
                "properties": {
                  "href": { "type": "string" }
                }
              }
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "password": { "type": "string" }
        },
        "required": ["username", "password"]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "message": { "type": "string" },
          "token": { "type": "string" },
          "user": {
            "type": "object",
            "properties": {
              "id": { "type": "integer" },
              "username": { "type": "string" }
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "username": { "type": "string" },
          "role": { "type": "string", "enum": ["user", "editor", "admin"] },
          "_links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": { "type": "string" }
                }
              },
              "assign_role": {
                "type": "object",
                "properties": {
                  "href": { "type": "string" }
                }
              }
            }
          }
        }
      },
      "UserList": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": { "type": "string" }
                }
              }
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": { "type": "string" },
          "_links": {
            "type": "object",
            "properties": {
              "login": {
                "type": "object",
                "properties": {
                  "href": { "type": "string" }
                }
              }
            }
          }
        }
      },
      "TokenInfo": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "id": { "type": "integer" },
              "username": { "type": "string" },
              "role": { "type": "string", "enum": ["user", "editor", "admin"] }
            }
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["books:read", "reviews:read", "reviews:write"]
          }
        }
      }
    },
    "parameters": {
      "pageParam": {
        "in": "query",
        "name": "page",
        "schema": {
          "type": "integer",
          "default": 1,
          "minimum": 1
        },
        "description": "Page number for pagination"
      },
      "limitParam": {
        "in": "query",
        "name": "limit",
        "schema": {
          "type": "integer",
          "default": 10,
          "minimum": 1,
          "maximum": 50
        },
        "description": "Number of items per page"
      },
      "authorParam": {
        "in": "query",
        "name": "author",
        "schema": {
          "type": "string"
        },
        "description": "Filter books by author name (partial match)"
      },
      "genreParam": {
        "in": "query",
        "name": "genre",
        "schema": {
          "type": "string"
        },
        "description": "Filter books by genre (partial match)"
      },
      "yearParam": {
        "in": "query",
        "name": "year",
        "schema": {
          "type": "integer"
        },
        "description": "Filter books by published year"
      },
      "titleParam": {
        "in": "query",
        "name": "title",
        "schema": {
          "type": "string"
        },
        "description": "Filter books by title (partial match)"
      }
    },
    "headers": {
      "ETag": {
        "description": "Entity tag for the resource",
        "schema": {
          "type": "string"
        }
      },
      "If-None-Match": {
        "description": "Used for conditional requests to check if resource has changed",
        "schema": {
          "type": "string"
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "summary": "Register a new user",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "User registered successfully" },
                    "username": { "type": "string" },
                    "role": { "type": "string", "default": "user" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Authenticate user and get JWT token",
        "description": "Authentication using Basic Auth header. Returns a JWT token with role and scope-based permissions.",
        "security": [],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Basic [A-Za-z0-9+/=]+"
            },
            "description": "Basic authentication header with base64 encoded username:password"
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/check-token": {
      "get": {
        "summary": "Verify and check token details",
        "description": "Returns information about the current user's token including role and scopes",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/books": {
      "get": {
        "summary": "Get a list of all books",
        "description": "Returns a paginated list of books with optional filtering. Requires 'books:read' scope.",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/authorParam"
          },
          {
            "$ref": "#/components/parameters/genreParam"
          },
          {
            "$ref": "#/components/parameters/yearParam"
          },
          {
            "$ref": "#/components/parameters/titleParam"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "schema": {
              "type": "string"
            },
            "description": "ETag from a previous request for conditional GET"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of books with HATEOAS links",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "ETag for caching"
              },
              "Cache-Control": {
                "schema": {
                  "type": "string"
                },
                "description": "Cache control directives"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookList"
                }
              }
            }
          },
          "304": {
            "description": "Not modified - Resource has not changed",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "ETag for caching"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Missing required scope 'books:read'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new book",
        "description": "Add a new book to the library. Requires 'books:write' scope (available to editor and admin roles).",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "author": { "type": "string" },
                  "published_year": { "type": "integer" },
                  "book_picture": { "type": "string" },
                  "book_description": { "type": "string" },
                  "genre": { "type": "string" },
                  "average_rating": { "type": "number", "format": "float" }
                },
                "required": ["title", "author", "published_year"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Book created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Missing required scope 'books:write'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/book/{id}": {
      "get": {
        "summary": "Get a book by ID",
        "description": "Returns detailed information about a specific book. Requires 'books:read' scope.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "schema": {
              "type": "string"
            },
            "description": "ETag from a previous request for conditional GET"
          }
        ],
        "responses": {
          "200": {
            "description": "The details of the book with HATEOAS links",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "ETag for caching"
              },
              "Cache-Control": {
                "schema": {
                  "type": "string"
                },
                "description": "Cache control directives"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "304": {
            "description": "Not modified - Resource has not changed",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "ETag for caching"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Missing required scope 'books:read'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Book not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a book by ID",
        "description": "Update an existing book. Requires 'books:write' scope (available to editor and admin roles).",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "author": { "type": "string" },
                  "published_year": { "type": "integer" },
                  "book_picture": { "type": "string" },
                  "book_description": { "type": "string" },
                  "genre": { "type": "string" },
                  "average_rating": { "type": "number", "format": "float" }
                },
                "required": ["title", "author", "published_year"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Book updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Missing required scope 'books:write'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Book not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a book by ID",
        "description": "Delete a book and its associated reviews. Requires 'books:write' scope (available to editor and admin roles).",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "_links": {
                      "type": "object",
                      "properties": {
                        "collection": {
                          "type": "object",
                          "properties": {
                            "href": { "type": "string" }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Missing required scope 'books:write'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Book not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/book/{bookId}/reviews": {
      "get": {
        "summary": "Get all reviews for a specific book",
        "description": "Returns all reviews for a given book. Requires 'reviews:read' scope.",
        "parameters": [
          {
            "in": "path",
            "name": "bookId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "schema": {
              "type": "string"
            },
            "description": "ETag from a previous request for conditional GET"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of reviews for the book with HATEOAS links",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "ETag for caching"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewList"
                }
              }
            }
          },
          "304": {
            "description": "Not modified - Resource has not changed"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Missing required scope 'reviews:read'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "No reviews found for this book",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a review for a specific book",
        "description": "Add a review for a book. Requires 'reviews:write' scope (available to all authenticated users).",
        "parameters": [
          {
            "in": "path",
            "name": "bookId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "review_text": { "type": "string" },
                  "rating": { 
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 5,
                    "description": "Rating from 1 to 5"
                  }
                },
                "required": ["review_text", "rating"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Review added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Missing required scope 'reviews:write'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Book not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/review/{id}": {
      "get": {
        "summary": "Get a specific review by ID",
        "description": "Returns details of a specific review. Requires 'reviews:read' scope.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "schema": {
              "type": "string"
            },
            "description": "ETag from a previous request for conditional GET"
          }
        ],
        "responses": {
          "200": {
            "description": "Review details with HATEOAS links",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "ETag for caching"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          },
          "304": {
            "description": "Not modified - Resource has not changed"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Missing required scope 'reviews:read'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Review not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a review by ID",
        "description": "Update an existing review. Requires 'reviews:write' scope.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "review_text": { "type": "string" },
                  "rating": { 
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 5,
                    "description": "Rating from 1 to 5"
                  }
                },
                "required": ["review_text", "rating"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Review updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Missing required scope 'reviews:write'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Review not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a review by ID",
        "description": "Delete a review. Requires 'reviews:delete' scope (available to editor and admin roles).",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Review deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "_links": {
                      "type": "object",
                      "properties": {
                        "book": {
                          "type": "object",
                          "properties": {
                            "href": { "type": "string" }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Missing required scope 'reviews:delete'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Review not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/users": {
      "get": {
        "summary": "List all users",
        "description": "List all users with their roles. Requires 'users:read' scope (available to admin role only).",
        "responses": {
          "200": {
            "description": "List of users with their roles",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Missing required scope 'users:read'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/users/{userId}/role": {
      "put": {
        "summary": "Assign a role to a user",
        "description": "Change a user's role. Requires 'users:write' scope (available to admin role only).",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": { 
                    "type": "string",
                    "enum": ["user", "editor", "admin"],
                    "description": "Role to assign to the user"
                  }
                },
                "required": ["role"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role assigned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "_links": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "href": { "type": "string" }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid role name",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Missing required scope 'users:write'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/users/{userId}": {
      "delete": {
        "summary": "Delete a user",
        "description": "Delete a user from the system. Requires 'users:delete' scope (available to admin role only).",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "_links": {
                      "type": "object",
                      "properties": {
                        "users": {
                          "type": "object",
                          "properties": {
                            "href": { "type": "string" }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Missing required scope 'users:delete'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  }
}